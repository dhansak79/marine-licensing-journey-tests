services:
  redis-frontend:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6380:6379'
    restart: always
    networks:
      cdp-tenant:

  defra-id-stub:
    image: defradigital/cdp-defra-id-stub:latest
    ports:
      - '3200:3200'
    environment:
      PORT: 3200
      REDIS_HOST: redis-frontend
      REDIS_PORT: 6380
      USE_SINGLE_INSTANCE_CACHE: true
      NODE_ENV: development
    depends_on:
      redis-frontend:
        condition: service_started
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3200/health']
      interval: 5s
      start_period: 5s
      retries: 3
    networks:
      cdp-tenant:
        aliases:
          - localhost

  marine-licensing-frontend:
    build: ./
    ports:
      - '3000:3000'
    env_file:
      - 'compose/aws.env'
    environment:
      PORT: 3000
      DEFRA_ID_ENABLED: true
      NODE_ENV: development
      USE_SINGLE_INSTANCE_CACHE: true
      MARINE_LICENSING_BACKEND_API_URL: http://marine-licensing-backend:3001
    volumes:
      - ./user-stub.json:/user-stub.json
    command: 'sh -c "curl -X POST -H \"Content-Type: application/json\" -d @/user-stub.json \"http://defra-id-stub:3200/cdp-defra-id-stub/API/register\" & node ."'
    depends_on:
      defra-id-stub:
        condition: service_healthy
    networks:
      - cdp-tenant
    extra_hosts:
      - 'localhost:host-gateway'
  
  localstack:
    image: localstack/localstack:3.0.2
    ports:
      - '4566:4566' # LocalStack Gateway
      - '4510-4559:4510-4559' # external services port range
    env_file:
      - 'compose/aws.env'
    environment:
      DEBUG: ${DEBUG:-1}
      LS_LOG: WARN # Localstack DEBUG Level
      SERVICES: s3,sqs,sns,firehose
      LOCALSTACK_HOST: 127.0.0.1
    volumes:
      - '${TMPDIR:-/tmp}/localstack:/var/lib/localstack'
      - ./compose/start-localstack.sh:/etc/localstack/init/ready.d/start-localstack.sh
    healthcheck:
      test: ['CMD', 'curl', 'localhost:4566']
      interval: 5s
      start_period: 5s
      retries: 3
    networks:
      - cdp-tenant

  redis:
    image: redis:7.2.3-alpine3.18
    ports:
      - '6379:6379'
    restart: always
    networks:
      - cdp-tenant

  mongodb:
    image: mongo:6.0.13
    networks:
      - cdp-tenant
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data
    restart: always

  cdp-uploader:
    image: defradigital/cdp-uploader:${CDP_UPLOADER_VERSION:-latest}
    ports:
      - '7337:7337'
    links:
      - 'localstack:localstack'
      - 'redis:redis'
    depends_on:
      localstack:
        condition: service_healthy
    env_file:
      - 'compose/aws.env'
    environment:
      VIRTUAL_HOST: ~^uploader\..*\.sslip\.io
      VIRTUAL_PATH: /
      VIRTUAL_PORT: 7337
      PORT: 7337
      NODE_ENV: development
      REDIS_HOST: redis
      USE_SINGLE_INSTANCE_CACHE: true
      MOCK_VIRUS_SCAN_ENABLED: true
      MOCK_VIRUS_RESULT_DELAY: 3
      MOCK_VIRUS_REGEX: '.*virus.*'
      CONSUMER_BUCKETS: '${CDP_UPLOAD_BUCKET:-mmo-uploads},cdp-uploader-quarantine'
      SQS_ENDPOINT: http://localstack:4566
      S3_ENDPOINT: http://localstack:4566
    networks:
      - cdp-tenant

  marine-licensing-backend:
    build:
      context: .
      target: development
    ports:
      - '3001:3001'
    links:
      - 'localstack:localstack'
      - 'mongodb:mongodb'
    depends_on:
      localstack:
        condition: service_healthy
      mongodb:
        condition: service_started
    env_file:
      - 'compose/aws.env'
    environment:
      PORT: 3001
      NODE_ENV: development
      LOCALSTACK_ENDPOINT: http://localstack:4566
      MONGO_URI: mongodb://mongodb:27017/
      DEFRA_ID_ENABLED: true
    networks:
      - cdp-tenant
    volumes:
      - ./src:/home/node/src
      - ./package.json:/home/node/package.json
    extra_hosts:
      - 'localhost:host-gateway'

networks:
  cdp-tenant:
    external: true
    driver: bridge
volumes:
  mongodb-data:
