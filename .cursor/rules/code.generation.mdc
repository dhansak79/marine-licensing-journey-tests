---
description: 
globs: 
alwaysApply: true
---
# Rules to follow when generating code

1. No TypeScript - this is a rule that is imposed centrally and not currently open to discussion
2. No JSDocs. Code should be expressive and self documenting. Creating JSDocs for new code generates inconsistency. This documentation quickly goes out of date and becomes misleading.
3. No code comments, code should be expressive and self documenting. In exceptional circumstances use a comment for complex business logic or non-obvious workarounds.
4. No `console.log()`.  If something needs to be visible this should be attached to the allure report using one of the functions in `test-infrastructure/capture`
5. Do not use `throw Error`. Any errors should use `chai` to fail an assertion. This causes any test cases to fail and the relevant information to be surfaced on the Allure report.  It also allows successful completion of the test run.
6. Guidance on test data management will be provided soon.  The current plan is to create a model for an exemption notification and a factory to create instances of this for testing.  We may have to introduce an API to remove test data from the backend in future.
7. Environment specifics are controlled in the `wdio.*.conf.js` files. See `baseUrl:`
8. Tasks vs Interactions
    - Tasks should be high-level and represent user goals, not technical actions
    - Interactions should be small and focused on a single action
    - Interactions also encapsulate assertions using the `ensure` prefix
