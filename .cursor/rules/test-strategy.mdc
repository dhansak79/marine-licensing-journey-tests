---
description: when considering overall test strategy, test implementation approaches, coverage planning, or exploratory testing sessions
globs: 
alwaysApply: false
---
# Test Strategy Documentation Standards

## Project Context

### **Government Service Context**
This is a **UK Government service** for marine licensing, **not a commercial project**. This affects testing strategy considerations:

- **No commercial revenue concerns** - Market competition, business profitability, and revenue generation are not applicable
- **Public service focus** - User needs, accessibility, and regulatory compliance are primary concerns
- **Statutory obligations** - Legal requirements and government standards apply
- **Public value definition** - Value is measured by user outcomes, public benefit, and value for money to taxpayers
- **Risk priorities** - Service availability, data protection, regulatory compliance, and delivery efficiency are key risks

### **Testing Strategy Implications**
When developing testing approaches:
- Focus on **user value and public benefit** whilst ensuring **value for money**
- Prioritise **accessibility and inclusion** as fundamental requirements
- Consider **regulatory and legal compliance** as non-negotiable quality criteria
- Emphasise **service reliability and efficiency** for public dependency and taxpayer value
- Remove commercial market frameworks whilst retaining efficiency and cost-effectiveness considerations

## Core Principle: Strategy vs Implementation

### **Strategy Focus: Intent and Approach**
Test strategy documentation should focus on:
- **How we approach testing** - Methodologies and frameworks
- **Why we make testing decisions** - Rationale and principles
- **What we intend to achieve** - Goals and quality objectives
- **How we think about testing** - Heuristics and systematic approaches

### **Avoid Implementation Status**
Test strategy should NOT include:
- ‚ùå **What has been implemented** - "Currently implemented: ML-1, ML-9"
- ‚ùå **Implementation status** - "‚úÖ Ready / üöß Draft / ‚ùå Blocked"
- ‚ùå **Current coverage lists** - Links to specific feature files or tests
- ‚ùå **Progress tracking** - What's done vs what's not done
- ‚ùå **Temporal references** - "We are currently focused on..."

### **Strategy Document Types**

#### **Strategy Documents** (test-strategy/*)
Focus on methodology, approach, and timeless guidance:
- Testing philosophy and principles
- Heuristic frameworks and systematic approaches
- Quality criteria and risk assessment methods
- Testing techniques and methodologies
- Tool categories and architectural approaches

#### **Implementation Documents** (Outside test-strategy/)
Track current state and progress:
- User story status and coverage
- Test charter completion tracking
- Current implementation priorities
- Feature file inventories
- Progress dashboards

## Documentation Separation Rules

### **Strategy Directory Structure**
```
test-strategy/
‚îú‚îÄ‚îÄ README.md              # Testing philosophy and approach
‚îú‚îÄ‚îÄ heuristics/            # Systematic thinking frameworks
‚îú‚îÄ‚îÄ automation/            # Architecture and technical approach
‚îú‚îÄ‚îÄ exploratory/           # Session-based methodology
‚îú‚îÄ‚îÄ user-journeys/         # BDD and journey testing approach
‚îú‚îÄ‚îÄ accessibility/         # Accessibility testing methodology
‚îî‚îÄ‚îÄ domain-context/        # Domain understanding and user context
```

### **Implementation Tracking Structure**
```
‚îú‚îÄ‚îÄ .cursor/user-stories/  # User story status and requirements
‚îú‚îÄ‚îÄ test-charters/         # Charter status and session tracking
‚îú‚îÄ‚îÄ test/features/         # Actual implementation files
‚îî‚îÄ‚îÄ README.md              # Project overview including current focus
```

## Content Guidelines

### **Strategy Content Should Include**
- **Methodological frameworks** - How we approach different types of testing
- **Quality criteria** - What we consider when assessing quality
- **Risk assessment approaches** - How we identify and prioritise risks
- **Testing techniques** - Specific methods and heuristics
- **Architectural principles** - How we structure our testing approach
- **Decision-making frameworks** - How we choose between testing options

### **Strategy Content Should Avoid**
- **Current project status** - What's implemented, what's not
- **Specific deadlines** - Timeline-dependent information
- **Implementation details** - Specific feature files or test cases
- **Progress measurements** - Completion percentages or tracking
- **Temporary priorities** - Current sprint or release focus

### **Language Patterns**

#### **Strategy Language (Good)**
- "We approach user journey testing by..."
- "Testing heuristics help us discover..."
- "Quality criteria include capability, reliability..."
- "Risk assessment considers..."
- "BDD scenarios should represent..."
- "Exploratory testing sessions focus on..."

#### **Implementation Language (Avoid in Strategy)**
- "We have implemented..."
- "Currently covered user stories include..."
- "‚úÖ Ready / üöß Draft status..."
- "We are currently focused on..."
- "Next steps include..."
- "Implemented journey tests..."

## Migration Guidelines

### **Moving Implementation Content**
When strategy documents contain implementation status:
1. **Extract status information** to appropriate tracking documents
2. **Preserve methodological content** in strategy documents
3. **Update links** to point to implementation tracking
4. **Refocus content** on approach and intent

### **Maintaining Separation**
- **Regular reviews** - Check strategy documents don't drift into status tracking
- **Clear boundaries** - Implementation teams update tracking docs, strategy teams update methodology
- **Link appropriately** - Strategy can reference implementation locations without tracking status

## Benefits of Separation

### **Strategy Benefits**
- **Timeless value** - Doesn't become outdated quickly
- **Reusable guidance** - Applies across different projects and contexts
- **Clear methodology** - Team understands approach regardless of current status
- **Decision support** - Helps make testing decisions based on principles

### **Implementation Benefits**
- **Current accuracy** - Status reflects reality without methodology confusion
- **Easy maintenance** - Update status without touching strategy
- **Clear progress tracking** - Teams can see what's done and what's next
- **Focused responsibility** - Different people can maintain different aspects

## Validation Checklist

Before publishing strategy content:
- [ ] Content focuses on approach, not status
- [ ] No implementation tracking or progress references
- [ ] Language is about intent and methodology
- [ ] Timeless guidance that applies beyond current project
- [ ] Clear separation from implementation tracking
- [ ] Links to implementation areas without embedding status
