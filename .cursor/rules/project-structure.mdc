---
description: 
globs: 
alwaysApply: true
---
# Project Structure Standards

This project implements BDD style tests using Cucumber, WebDriverIO and the Screenplay pattern for end-to-end testing, which is a user-centric approach to UI automation that focuses on who does what and why.

- `test/` - contains cucumber features and steps
  - `features/` - Main application entry point
    - `*.feature` - individual feature files
    - `*.js/` - implements cucumber steps
- `test-infrastructure/` - Express route handlers
  - `capture/` - and code that involves capturing data for the purposes of attaching to the allure report
  - `pages/` - page objects which should only contain locators
  - `screenplay/` - all code implementing the screenplay pattern
    - `actor.js` - the actor represented in the test
    - `abilities/` - the abilities that the actor has
        - `browse.the.web.js` - encapsulates all WebDriverIO code - imagine we switched later to PlayWright and we only have to change one file
    - `interactions/` - granular interactions that the actor can perform
    - `tasks/` - tasks that the actor can perform representing a user flow
- `*.conf.js` - WebDriverIO config files

## File Organization Rules

1. All new features should be added to the `test/features/` directory
2. All new steps should be added to the `test/steps/` directory
3. All new screenplay pattern code should be added to the `test-infrastructure/screenplay` directory
4. All new page objects should be added to the `test-infrastructure/pages` directory

## Naming Conventions
- Static assets: Use kebab-case for filenames
- JavaScript files: Use dot.case for filenames
