---
description: when creating or updating documentation, ensuring cross-reference integrity, maintaining documentation quality, or managing complex documentation structures
globs: 
alwaysApply: false
---
# Documentation Coherence & Quality Standards

This rule ensures consistency and coherence across test strategy documentation and test charters, based on comprehensive review findings.

## Core Coherence Requirements

### **Cross-Reference Integrity**
- **All referenced files must exist** - Every link to a charter, strategy document, or resource must point to an actual file
- **Anchor links must match headings** - Use exact heading text for anchor references (e.g., `#amy-veteran-applicant---efficiency-testing`)
- **Consistent naming patterns** - File names must match how they're referenced in READMEs and status tables
- **Working navigation** - All "Quick Access" tables and navigation sections must have functional links

### **Status Tracking Accuracy**
- **Charter status table** must reflect actual file completion status
- **Session hopper** must reference actual charter names, not placeholder descriptions
- **File organization** sections must match actual directory structure
- **Priority alignment** between status tables and actual implementation needs

## Test Strategy Documentation Standards

### **Structure Requirements**
- **Complete sections** - No truncated content or mid-sentence cuts
- **Proper integration** - All strategy components must reference each other appropriately
- **Consistent terminology** - Use "scenario testing" (not "scenario-based testing"), "SBTM" consistently
- **British English** throughout all documentation

### **Content Quality Standards**
- **Professional tone** - Understated, practical language serving user needs
- **No forced acronyms** - Avoid cheesy mnemonics, use straightforward language
- **Evidence-based** - Claims supported by methodology or research references
- **Domain-appropriate** - Marine licensing context integrated naturally

## Charter System Standards

### **Dual Charter Approach**
- **Traditional SBTM charters** - 60-90 minute focused technical investigation
- **Scenario-enhanced charters** - 90-120 minute realistic user investigation using Bolton's framework
- **Complementary coverage** - Both types should exist for high-priority user stories
- **Clear differentiation** - Each type serves different investigation goals

### **Scenario Charter Requirements**
When creating scenario charters, ensure:

#### **Bolton Framework Components:**
- **THEME** - Clear mission about realistic user situation
- **SETUP** - Authentic context, pressures, environment with specific persona details
- **ACTIVITIES** - Guided but flexible realistic actions with specific examples
- **ORACLES** - Multiple quality indicators beyond functional correctness
- **VARIATIONS** - Realistic turbulence and stress testing approaches

#### **Marine Licensing Context:**
- **Persona authenticity** - Use Zofia, Amy, Fatima, Simon with realistic pressures
- **Domain terminology** - Marine licensing language appropriate to user context
- **Regulatory reality** - Reflect actual marine licensing constraints and requirements
- **Technology friction** - Include realistic device, network, and accessibility challenges

### **Charter File Structure**
Every scenario charter must include:
```
Charter Definition (Charter statement, duration, priority, type)
Scenario Context (Theme, Setup, Realistic Pressures)
Scenario Activities (Guided actions, variations/turbulence)
Scenario Oracles (Quality indicators organized by type)
Evidence Collection Framework (Discovery documentation, problem classification)
Follow-up Investigation Areas (Immediate follow-ups, suggested scenarios, automation implications)
Session Structure (Setup, investigation, debrief phases with time allocations)
Related Resources (Cross-references to user stories, personas, complementary charters)
```

## Reference Management

### **Internal Link Patterns**
- **Strategy to charters**: `../test-charters/README.md`
- **Charters to strategy**: `../test-strategy/[component]/README.md`
- **User story references**: `../../.cursor/user-stories/[story-file].mdc`
- **Persona references**: Point to general domain context rather than specific anchors unless verified

### **Anchor Link Standards**
- **Use exact heading text** with proper markdown anchor format
- **Prefer general section links** over specific anchors for external documents
- **Verify anchor existence** before using specific fragment identifiers
- **Update anchors** when headings change in referenced documents

## Quality Assurance Practices

### **Before Publishing Documentation**
1. **Verify all links work** - Check every cross-reference resolves correctly
2. **Confirm file existence** - Ensure all referenced charters and documents exist
3. **Validate status tracking** - Status tables match actual file states
4. **Check naming consistency** - References match actual file names
5. **Review British English** - Consistent spelling and professional tone

### **When Adding New Content**
1. **Update cross-references** - Add new content to relevant navigation sections
2. **Maintain status tables** - Update charter status and priority information
3. **Preserve naming patterns** - Follow established file naming conventions
4. **Test integration** - Ensure new content fits coherently with existing structure

### **When Editing Existing Content**
1. **Check dependent references** - Find what links to changed content
2. **Update anchor links** - Modify references if headings change
3. **Maintain coherence** - Ensure changes don't break narrative flow
4. **Validate cross-references** - Confirm all links still work after changes

## Common Coherence Issues (Avoid These)

### **Reference Problems**
- **Missing files** - Referencing charters or documents that don't exist
- **Broken anchors** - Using anchor links that don't match actual headings
- **Inconsistent naming** - Calling same charter different names in different places
- **Stale references** - Links to content that has been moved or renamed

### **Status Problems**
- **Inaccurate status** - Marking drafts as ready or ready content as draft
- **Inconsistent priorities** - Different priority ratings in different documents
- **Outdated hoppers** - Session hoppers referencing old or incorrect charter names
- **Missing updates** - Not updating status when files are created or completed

### **Content Problems**
- **Truncated sections** - Incomplete content that cuts off mid-sentence
- **Inconsistent terminology** - Using different terms for same concepts
- **Missing integration** - New content not linked from relevant navigation
- **Quality gaps** - Content not meeting established professional standards

## Integration with Existing Rules

This rule works alongside:
- **`playbook.styleguide.mdc`** - British English and professional tone standards
- **`test-charters.mdc`** - Charter methodology and dual approach framework  
- **`scenario-testing.mdc`** - Bolton framework implementation specifics
- **`responsible.ai.use.mdc`** - Human verification for domain-specific content

## Maintenance Responsibilities

### **During Content Creation**
- Apply coherence standards immediately
- Check cross-references as you write
- Update status tracking in real-time
- Maintain quality standards throughout

### **During Content Review**
- Verify all cross-references work
- Check naming consistency across documents
- Validate status tracking accuracy
- Ensure professional tone and British English

### **During Major Updates**
- Review entire documentation structure for coherence
- Update all cross-references systematically
- Refresh status tables and navigation sections
- Validate integration between strategy and charters

## Attribution Standards

### **Required Attribution**

All methodology references must properly credit original contributors:

#### **Core Testing Methodologies**
- **Context-Driven Testing** - *James Bach, Cem Kaner, Michael Bolton*
- **Session-Based Test Management (SBTM)** - *Jon Bach* 
- **Heuristic Test Strategy Model (HTSM)** - *James Bach*
- **Scenario Testing** - *Michael Bolton* (THEME → SETUP → ACTIVITIES → ORACLES → VARIATIONS)
- **Risk-Based Testing** - *Elisabeth Hendrickson, James Bach*
- **Agile Testing Practices** - *Elisabeth Hendrickson, Janet Gregory, Lisa Crispin*

#### **Attribution Placement**
1. **Major methodology introductions** - Dedicated attribution section with contributor names in strategy documents
2. **Strategy overviews** - "Built on Proven Foundations" sections in main strategy files
3. **Framework integrations** - Clear crediting when combining approaches in investigative testing documentation
4. **Charter references** - Simple link to investigative testing framework, not detailed attribution (charters focus on execution)

#### **Attribution Scope**
- **Strategy documents** - Full attribution with contributor names and contributions
- **Charter documents** - Simple framework reference link only (keep execution-focused)
- **Main project documentation** - Overview attribution acknowledging foundational work
- **Dedicated attribution file** - Comprehensive acknowledgments with references and reading lists

#### **Attribution Language Standards**
- Use full names with italics: *Michael Bolton*, *James Bach*
- Be specific about contributions: "HTSM systematic heuristics from *James Bach's* Heuristic Test Strategy Model"
- Acknowledge adaptation: "respectfully builds upon", "adapts proven methodologies"
- Professional tone: "foundational work", "established methodologies"

#### **Focused Attribution Principle**
**Only include attributions directly related to material provided or requests made.**

- **Direct relevance only** - Attribute only the methodologies, frameworks, or ideas actually used in the specific work
- **Avoid academic comprehensiveness** - Don't include extensive attribution for tangentially related work or general testing knowledge
- **User-request driven** - When user provides specific material or makes specific requests, attribute only the relevant contributors to that specific work
- **Practical focus** - Attribute the specific techniques, frameworks, or approaches being implemented, not the broader field
- **Streamlined acknowledgment** - Keep attribution sections focused on the actual foundations being used rather than comprehensive testing literature reviews

**Examples:**
- ✅ **Good**: In investigative testing work using Bolton's scenario framework, Bach's HTSM, and J. Bach's SBTM → attribute only Bolton, James Bach, and John Bach
- ❌ **Avoid**: Including Elisabeth Hendrickson, Cem Kaner, and extensive testing community attributions when they don't directly inform the specific approach being used
- ✅ **Good**: When implementing specific automation patterns → attribute only the relevant automation thought leaders
- ❌ **Avoid**: Comprehensive testing methodology attribution when working on focused implementation

### **Consistency Standards**

#### **Cross-Reference Integrity**
- All internal links must resolve to existing sections or files
- Anchor links (`#section-name`) must point to actual heading anchors
- File references must use correct relative paths from current location
- Update all cross-references when moving or renaming files

#### **Status Tracking Accuracy**
- Status tables must reflect actual file states (Draft/Ready/Complete)
- Session hoppers must reference real charter names, not placeholder descriptions
- Priority assignments must align with actual business risk assessments
- Progress indicators must match current development state

## Quality Assurance Practices

### **Documentation Review Checklist**
- [ ] All methodology references include proper attribution
- [ ] Cross-references resolve correctly
- [ ] Status tracking reflects reality
- [ ] Bolton framework structure followed in scenario charters
- [ ] Professional British English maintained throughout
- [ ] Marine licensing domain context appropriate

### **Common Coherence Issues**

#### **Attribution Problems**
- Missing contributor names when referencing methodologies
- Vague references like "established practices" without specific attribution
- Claiming originality for adapted existing methodologies
- Inconsistent attribution across different documents

#### **Cross-Reference Failures**
- Broken anchor links from content reorganisation
- File moves without updating references
- Placeholder text left in production documentation
- Generic section references that don't exist

#### **Status Inconsistencies**
- Completed files marked as "Draft" in tracking tables
- Session hoppers describing non-existent charters
- Priority levels not aligned with actual risk assessment
- Out-of-date progress indicators

### **British English Professional Standards**

- Use "whilst" not "while" for formal contexts
- Use "optimisation" not "optimization"
- Use "realise" not "realize"
- Professional, understated tone throughout
- Avoid forced acronyms and cheesy mnemonics
- Follow GOV.UK content design principles

## Charter-Specific Standards

### **Bolton Framework Implementation**
All scenario charters must follow Michael Bolton's structure:
- **THEME** - Rich user context and authentic situation
- **SETUP** - Realistic pressures, friction, and environment
- **ACTIVITIES** - Guided but flexible actions following user patterns  
- **ORACLES** - Quality indicators and evidence frameworks
- **VARIATIONS** - Turbulence and realistic complications

### **Session-Based Structure** (Jon Bach's SBTM)
- 90-minute time-boxed sessions
- Clear charter statements
- Structured debrief and documentation
- Evidence collection frameworks
- Follow-up investigation planning

### **Heuristic Integration** (James Bach's HTSM)
- Systematic thinking models throughout charters
- HTSM categories applied appropriately
- Evidence-based discovery approaches
- Context-driven adaptation

## Maintenance Practices

### **Regular Coherence Audits**
1. **Cross-reference validation** - Monthly link checking
2. **Attribution completeness** - Quarterly methodology review
3. **Status accuracy** - Bi-weekly status table updates
4. **Framework consistency** - Ongoing charter structure validation

### **Change Impact Assessment**
When updating documentation:
1. Identify all files referencing changed content
2. Update cross-references and status tracking
3. Maintain attribution accuracy
4. Preserve professional tone and British English standards
5. Validate Bolton framework structure in charters

## Team Context for Strategy Development

### **Resource-Aware Strategy Planning**

When developing test strategy content, ensure recommendations are:

- **Achievable with limited quality engineering resources** - Focus on high-impact, low-maintenance approaches
- **Suitable for domain experts to contribute** - Make investigative testing accessible to MMO staff and business analysts
- **Automation-first by necessity** - Emphasise automation as primary quality assurance given resource constraints
- **Pragmatic over comprehensive** - Prioritise essential activities that deliver maximum value
- **Scalable and sustainable** - Approaches that can grow with team capacity over time

### **Practical Implementation Focus**

- **Simple, effective techniques** over complex methodologies
- **Clear guidance** for non-testing specialists to contribute effectively
- **Realistic timeframes** and expectations for delivery
- **Focus on core user journeys** rather than exhaustive coverage
- **Leverage domain expertise** from permanent staff who understand user needs
- **Gradual adoption** of advanced techniques as capacity allows

---

**Purpose**: This rule prevents the documentation coherence issues discovered during comprehensive review, ensuring test strategy and charter documentation remains navigable, accurate, and professionally maintained.

**Application**: Use when creating, editing, or reviewing any documentation in test-strategy or test-charters directories.
