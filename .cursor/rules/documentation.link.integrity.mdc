---
description:
globs:
alwaysApply: false
---
# Documentation Link Integrity

*Ensuring all rule files are properly linked and discoverable*

## Context
This rule ensures that when creating new `.mdc` rule files, they are properly linked in the main README so they can be discovered and used.

## The Problem We Found

### Missing Links Break Discoverability
Created `test-strategy.mdc` but forgot to link it in the README, making it invisible to users browsing the rules.

**The Pattern**: Files exist but aren't linked = wasted effort and confusion.

## Core Principles

### 1. Every .mdc File Must Be Linked
**Rule**: If a `.mdc` file exists, it must be linked in the appropriate section of the README.

```bash
# Always check after creating new rules
ls .cursor/rules/*.mdc | wc -l
grep -c "\.mdc)" .cursor/rules/README.md
# These numbers should match!
```

### 2. Systematic Link Verification
```bash
# Find missing links
ls .cursor/rules/*.mdc | sed 's|.cursor/rules/||' | sort > /tmp/actual_files.txt
grep "\.mdc)" .cursor/rules/README.md | grep -o '[a-z.-]*\.mdc' | sort | uniq > /tmp/readme_links.txt
diff /tmp/actual_files.txt /tmp/readme_links.txt
```

### 3. Categorise Links Appropriately
Place new rule links in the correct section:

- **üö® Critical Anti-Over-Engineering Rules** - Core refactoring and simplification
- **üß™ Testing & Quality Strategy** - Test approaches and methodologies  
- **üèóÔ∏è Development & Architecture** - Code structure and patterns
- **üîß Refactoring & Code Safety** - Safe change practices
- **üéØ Domain & Context** - Application-specific knowledge
- **üìù Code Quality & Standards** - Coding standards and practices
- **üìö Documentation & Communication** - Documentation practices

## Mandatory Checks When Creating New Rules

### 1. After Creating Any .mdc File
```bash
# Verify the file is linked
grep "$(basename newfile.mdc)" .cursor/rules/README.md
```

### 2. Before Committing Changes
```bash
# Ensure all files are linked
file_count=$(ls .cursor/rules/*.mdc | wc -l)
link_count=$(grep -c "\.mdc)" .cursor/rules/README.md)
if [ "$file_count" -ne "$link_count" ]; then
  echo "ERROR: $file_count files but $link_count links!"
  exit 1
fi
```

### 3. Add Meaningful Descriptions
Don't just link the file - explain what someone learns from it:

```markdown
| [`new-rule.mdc`](./new-rule.mdc) | What specific problem this solves or pattern it teaches |
```

## Link Format Standards

### Table Format
```markdown
| [`rule-name.mdc`](./rule-name.mdc) | Brief description of what it teaches |
```

### Inline Format (for references)
```markdown
See [`rule-name.mdc`](./rule-name.mdc) for details on...
```

### Cross-References
```markdown
This works with [`related-rule.mdc`](./related-rule.mdc) to provide...
```

## Automation Opportunities

### Git Pre-Commit Hook
```bash
#!/bin/bash
# Check link integrity before commit
file_count=$(ls .cursor/rules/*.mdc 2>/dev/null | wc -l)
link_count=$(grep -c "\.mdc)" .cursor/rules/README.md 2>/dev/null || echo 0)

if [ "$file_count" -ne "$link_count" ]; then
  echo "‚ùå Link integrity check failed:"
  echo "   Found $file_count .mdc files but $link_count links in README"
  echo "   Please add missing links to .cursor/rules/README.md"
  exit 1
fi
```

### Documentation Generation
Consider automating the link generation:
```bash
# Generate links for all .mdc files
for file in .cursor/rules/*.mdc; do
  name=$(basename "$file")
  echo "| [\`$name\`](./$name) | TODO: Add description |"
done
```

## Why This Matters

### 1. Discoverability
Rules that aren't linked are effectively invisible to users browsing the documentation.

### 2. Maintenance
Missing links indicate incomplete documentation work and can lead to orphaned files.

### 3. Quality Assurance
Link integrity checks catch documentation gaps early in the development process.

### 4. User Experience
Complete, well-organised rule listings help users find the guidance they need quickly.

## Remember
**Every rule created should be immediately linked with a clear description of what it teaches.**

This ensures our knowledge base remains complete, discoverable, and useful for everyone who needs to understand our quality engineering practices.
